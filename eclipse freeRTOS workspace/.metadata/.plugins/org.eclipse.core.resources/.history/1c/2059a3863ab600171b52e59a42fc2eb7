#include <Arduino.h>
#include <avr/io.h>
#include <FreeRTOS.h>
#include <task.h>

#define STACK_SIZE   200


void myDelay(int ms) {
	for (int i = 0; i < ms; i++) {
		delayMicroseconds(1000);
	}
}


void task1()
{
	Serial.println("task1");
}


void task2()
{
	Serial.println("task2");
}

void task3()
{
	Serial.println("task3");
}
void task4()
{
	Serial.println("task4");

}

void task0(void *p){
		TickType_t xLastWakeTime;
		const TickType_t idle = 5;

		// Initialise the xLastWakeTime variable with the current time.
		xLastWakeTime = xTaskGetTickCount();
		Serial.println("task0");
		while(1){

			task1();
			task2();
			task4();
			vTaskDelayUntil( &xLastWakeTime, idle);

			task1();
			task3();
			vTaskDelayUntil( &xLastWakeTime, idle);

			task1();
			task2();
			vTaskDelayUntil( &xLastWakeTime, idle);

			task1();
			task3();
			vTaskDelayUntil( &xLastWakeTime, idle);
		}
}

void setup()
{
	Serial.begin(115200);
}

void loop() {
	Serial.println("new test");
	xTaskCreate(task0,           // Pointer to the task entry function
				"Task0",         // Task name
				STACK_SIZE,      // Stack size
				NULL,            // Pointer that will be used as parameter
				0,               // Task priority
				NULL);           // Used to pass back a handle by which the created task can be referenced.

	vTaskStartScheduler();
}
